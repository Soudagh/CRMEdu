{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/tutors/{id}": {
      "get": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "getTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTutorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "updateTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTutorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "deleteTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/subjects/{id}": {
      "get": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "getSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "updateSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "deleteSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetUserResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tutors": {
      "get": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "getTutors",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetTutorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "createTutors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTutorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTutorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subjects": {
      "get": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "getSubjects",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetSubjectResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "createSubject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetOrganizationResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserRequest": {
        "required": [
          "email",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          },
          "timezone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "socialName": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Subject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        }
      },
      "Tutor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TutorSchedule": {
        "type": "object",
        "properties": {
          "tutor": {
            "$ref": "#/components/schemas/Tutor"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "object",
            "properties": {
              "offset": {
                "type": "object",
                "properties": {
                  "totalSeconds": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "id": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "object",
                    "properties": {
                      "fixedOffset": {
                        "type": "boolean"
                      },
                      "transitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "object",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "zero": {
                                  "type": "boolean"
                                },
                                "nano": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "negative": {
                                  "type": "boolean"
                                },
                                "positive": {
                                  "type": "boolean"
                                },
                                "units": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "durationEstimated": {
                                        "type": "boolean"
                                      },
                                      "timeBased": {
                                        "type": "boolean"
                                      },
                                      "dateBased": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "gap": {
                              "type": "boolean"
                            },
                            "dateTimeAfter": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateTimeBefore": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "instant": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "overlap": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "transitionRules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "month": {
                              "type": "string",
                              "enum": [
                                "JANUARY",
                                "FEBRUARY",
                                "MARCH",
                                "APRIL",
                                "MAY",
                                "JUNE",
                                "JULY",
                                "AUGUST",
                                "SEPTEMBER",
                                "OCTOBER",
                                "NOVEMBER",
                                "DECEMBER"
                              ]
                            },
                            "timeDefinition": {
                              "type": "string",
                              "enum": [
                                "UTC",
                                "WALL",
                                "STANDARD"
                              ]
                            },
                            "dayOfWeek": {
                              "type": "string",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            },
                            "dayOfMonthIndicator": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "localTime": {
                              "$ref": "#/components/schemas/LocalTime"
                            },
                            "midnightEndOfDay": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "hour": {
                "type": "integer",
                "format": "int32"
              },
              "minute": {
                "type": "integer",
                "format": "int32"
              },
              "second": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "timeEnd": {
            "type": "object",
            "properties": {
              "offset": {
                "type": "object",
                "properties": {
                  "totalSeconds": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "id": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "object",
                    "properties": {
                      "fixedOffset": {
                        "type": "boolean"
                      },
                      "transitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "object",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "zero": {
                                  "type": "boolean"
                                },
                                "nano": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "negative": {
                                  "type": "boolean"
                                },
                                "positive": {
                                  "type": "boolean"
                                },
                                "units": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "durationEstimated": {
                                        "type": "boolean"
                                      },
                                      "timeBased": {
                                        "type": "boolean"
                                      },
                                      "dateBased": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "gap": {
                              "type": "boolean"
                            },
                            "dateTimeAfter": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateTimeBefore": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "instant": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "overlap": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "transitionRules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "month": {
                              "type": "string",
                              "enum": [
                                "JANUARY",
                                "FEBRUARY",
                                "MARCH",
                                "APRIL",
                                "MAY",
                                "JUNE",
                                "JULY",
                                "AUGUST",
                                "SEPTEMBER",
                                "OCTOBER",
                                "NOVEMBER",
                                "DECEMBER"
                              ]
                            },
                            "timeDefinition": {
                              "type": "string",
                              "enum": [
                                "UTC",
                                "WALL",
                                "STANDARD"
                              ]
                            },
                            "dayOfWeek": {
                              "type": "string",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            },
                            "dayOfMonthIndicator": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "localTime": {
                              "$ref": "#/components/schemas/LocalTime"
                            },
                            "midnightEndOfDay": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "hour": {
                "type": "integer",
                "format": "int32"
              },
              "minute": {
                "type": "integer",
                "format": "int32"
              },
              "second": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "UpdateTutorRequest": {
        "type": "object",
        "properties": {
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TutorSchedule"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        }
      },
      "UpdateSubjectRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UpdateOrganizationRequest": {
        "required": [
          "country",
          "name",
          "specialization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "specialization": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "pattern": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$",
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "name",
          "phone",
          "surname"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          },
          "timezone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "USER"
            ]
          }
        }
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateTutorRequest": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "integer",
            "format": "int64"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TutorSchedule"
            }
          }
        }
      },
      "CreateTutorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TutorSchedule"
            }
          }
        }
      },
      "CreateSubjectRequest": {
        "required": [
          "name",
          "organization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateSubjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateOrganizationRequest": {
        "required": [
          "country",
          "email",
          "name",
          "specialization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "specialization": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          }
        }
      },
      "CreateOrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTOGetUserResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetTutorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TutorSchedule"
            }
          }
        }
      },
      "PageDTOGetTutorResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTutorResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSubjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTOGetSubjectResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubjectResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetOrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "PageDTOGetOrganizationResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrganizationResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
