{
  "openapi": "3.0.1",
  "info": {
    "title": "CRMEduScheme Authentication Service"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/tutors/{id}": {
      "get": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "getTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTutorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "updateTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTutorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "deleteTutor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/subjects/{id}": {
      "get": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "getSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "updateSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "deleteSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/students/{id}": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "operationId": "getStudentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetStudentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "student-controller"
        ],
        "operationId": "updateStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "student-controller"
        ],
        "operationId": "deleteStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/schedules/{id}": {
      "get": {
        "tags": [
          "tutor-schedule-controller"
        ],
        "operationId": "getTutorScheduleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTutorScheduleResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tutor-schedule-controller"
        ],
        "operationId": "updateSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTutorScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "tutor-schedule-controller"
        ],
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetUserResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tutors": {
      "get": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "getTutors",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetTutorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "createTutors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTutorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTutorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subjects": {
      "get": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "getSubjects",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetSubjectResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subject-controller"
        ],
        "operationId": "createSubject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "operationId": "getStudents",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetStudentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "student-controller"
        ],
        "operationId": "createStudent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStudentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedules/tutor/{tutorId}": {
      "get": {
        "tags": [
          "tutor-schedule-controller"
        ],
        "operationId": "getTutorSchedulesOfTutor",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "tutorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetTutorScheduleResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tutor-schedule-controller"
        ],
        "operationId": "createSchedule",
        "parameters": [
          {
            "name": "tutorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTutorScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTutorScheduleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDTOGetOrganizationResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lessons/{id}/qr": {
      "post": {
        "tags": [
          "lesson-controller"
        ],
        "operationId": "createLessonQr",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLessonQrResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getNewAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshJwtRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getNewRefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshJwtRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attendances/mark": {
      "post": {
        "tags": [
          "attendance-controller"
        ],
        "operationId": "markAttendance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAttendanceByQrRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-controller"
        ],
        "operationId": "updateNotificationsMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserNotificationsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/tutors/{id}/subjects": {
      "patch": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "updateSubjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTutorSubjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/tutors/{id}/grades": {
      "patch": {
        "tags": [
          "tutor-controller"
        ],
        "operationId": "updateGrades",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTutorGradesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/lessons/{id}/notes": {
      "patch": {
        "tags": [
          "lesson-controller"
        ],
        "operationId": "patchLessonNotesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLessonNotesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/lessons/{id}/link": {
      "patch": {
        "tags": [
          "lesson-controller"
        ],
        "operationId": "patchLessonLinkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLessonLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/attendances/{id}": {
      "patch": {
        "tags": [
          "attendance-controller"
        ],
        "operationId": "patchStatusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAttendanceStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/schedule": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUserSchedule",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserScheduleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/notifications": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "getUserNotifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lessons/{id}": {
      "get": {
        "tags": [
          "lesson-controller"
        ],
        "operationId": "getLessonById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetLessonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-email": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserRequest": {
        "required": [
          "email",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          },
          "timezone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "socialName": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "UpdateTutorRequest": {
        "type": "object",
        "properties": {
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UpdateSubjectRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UpdateStudentRequest": {
        "required": [
          "grade"
        ],
        "type": "object",
        "properties": {
          "hex": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "grade": {
            "maximum": 11,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        }
      },
      "UpdateTutorScheduleRequest": {
        "required": [
          "timeEnd",
          "timeStart"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          }
        }
      },
      "UpdateOrganizationRequest": {
        "required": [
          "country",
          "name",
          "specialization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "specialization": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "pattern": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$",
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "name",
          "phone",
          "surname"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          },
          "timezone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "STUDENT",
              "USER"
            ]
          }
        }
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "STUDENT",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateTutorRequest": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "integer",
            "format": "int64"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateTutorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TutorSchedule"
            }
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "notificationType": {
            "type": "string",
            "enum": [
              "LESSON",
              "HOMEWORK",
              "PAYMENT",
              "OTHER"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Subject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        }
      },
      "Tutor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TutorSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "object",
            "properties": {
              "offset": {
                "type": "object",
                "properties": {
                  "totalSeconds": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "id": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "object",
                    "properties": {
                      "fixedOffset": {
                        "type": "boolean"
                      },
                      "transitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "object",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "zero": {
                                  "type": "boolean"
                                },
                                "nano": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "negative": {
                                  "type": "boolean"
                                },
                                "positive": {
                                  "type": "boolean"
                                },
                                "units": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "durationEstimated": {
                                        "type": "boolean"
                                      },
                                      "timeBased": {
                                        "type": "boolean"
                                      },
                                      "dateBased": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "gap": {
                              "type": "boolean"
                            },
                            "dateTimeAfter": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateTimeBefore": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "instant": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "overlap": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "transitionRules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "month": {
                              "type": "string",
                              "enum": [
                                "JANUARY",
                                "FEBRUARY",
                                "MARCH",
                                "APRIL",
                                "MAY",
                                "JUNE",
                                "JULY",
                                "AUGUST",
                                "SEPTEMBER",
                                "OCTOBER",
                                "NOVEMBER",
                                "DECEMBER"
                              ]
                            },
                            "timeDefinition": {
                              "type": "string",
                              "enum": [
                                "UTC",
                                "WALL",
                                "STANDARD"
                              ]
                            },
                            "dayOfWeek": {
                              "type": "string",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            },
                            "dayOfMonthIndicator": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "localTime": {
                              "$ref": "#/components/schemas/LocalTime"
                            },
                            "midnightEndOfDay": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "hour": {
                "type": "integer",
                "format": "int32"
              },
              "minute": {
                "type": "integer",
                "format": "int32"
              },
              "second": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "timeEnd": {
            "type": "object",
            "properties": {
              "offset": {
                "type": "object",
                "properties": {
                  "totalSeconds": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "id": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "object",
                    "properties": {
                      "fixedOffset": {
                        "type": "boolean"
                      },
                      "transitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "object",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "zero": {
                                  "type": "boolean"
                                },
                                "nano": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "negative": {
                                  "type": "boolean"
                                },
                                "positive": {
                                  "type": "boolean"
                                },
                                "units": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "durationEstimated": {
                                        "type": "boolean"
                                      },
                                      "timeBased": {
                                        "type": "boolean"
                                      },
                                      "dateBased": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "gap": {
                              "type": "boolean"
                            },
                            "dateTimeAfter": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateTimeBefore": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "instant": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "overlap": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "transitionRules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "month": {
                              "type": "string",
                              "enum": [
                                "JANUARY",
                                "FEBRUARY",
                                "MARCH",
                                "APRIL",
                                "MAY",
                                "JUNE",
                                "JULY",
                                "AUGUST",
                                "SEPTEMBER",
                                "OCTOBER",
                                "NOVEMBER",
                                "DECEMBER"
                              ]
                            },
                            "timeDefinition": {
                              "type": "string",
                              "enum": [
                                "UTC",
                                "WALL",
                                "STANDARD"
                              ]
                            },
                            "dayOfWeek": {
                              "type": "string",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            },
                            "dayOfMonthIndicator": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "localTime": {
                              "$ref": "#/components/schemas/LocalTime"
                            },
                            "midnightEndOfDay": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "hour": {
                "type": "integer",
                "format": "int32"
              },
              "minute": {
                "type": "integer",
                "format": "int32"
              },
              "second": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "tutor": {
            "$ref": "#/components/schemas/Tutor"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "verificationToken": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "STUDENT",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "notificationsEnabled": {
            "type": "boolean"
          },
          "hex": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          }
        }
      },
      "CreateSubjectRequest": {
        "required": [
          "name",
          "organization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateSubjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateStudentRequest": {
        "required": [
          "grade",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "hex": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "grade": {
            "maximum": 11,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        }
      },
      "CreateStudentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "getUserResponse": {
            "$ref": "#/components/schemas/GetUserResponse"
          },
          "hex": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "grade": {
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        }
      },
      "GetOrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "STUDENT",
              "USER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "PENDING"
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/GetOrganizationResponse"
          },
          "notificationsEnabled": {
            "type": "boolean"
          }
        }
      },
      "CreateTutorScheduleRequest": {
        "required": [
          "timeEnd",
          "timeStart"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          }
        }
      },
      "CreateTutorScheduleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tutorId": {
            "type": "integer",
            "format": "int64"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          }
        }
      },
      "CreateOrganizationRequest": {
        "required": [
          "country",
          "email",
          "name",
          "specialization"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "specialization": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          }
        }
      },
      "CreateOrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CreateLessonQrResponse": {
        "type": "object",
        "properties": {
          "qrPayload": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RefreshJwtRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "JwtResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "SignUpRequest": {
        "required": [
          "email",
          "name",
          "phone",
          "surname"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "pattern": "^\\+\\d{1,3}\\d{10}$",
            "type": "string"
          },
          "timezone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organization": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERUSER",
              "ORG_ADMIN",
              "TUTOR",
              "CURATOR",
              "STUDENT",
              "USER"
            ]
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SignInRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "MarkAttendanceByQrRequest": {
        "type": "object",
        "properties": {
          "qrPayload": {
            "type": "string"
          }
        }
      },
      "UpdateUserNotificationsRequest": {
        "type": "object",
        "properties": {
          "notifyMode": {
            "type": "boolean"
          }
        }
      },
      "PatchTutorSubjectsRequest": {
        "required": [
          "subjects"
        ],
        "type": "object",
        "properties": {
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "PatchTutorGradesRequest": {
        "required": [
          "grades"
        ],
        "type": "object",
        "properties": {
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PatchLessonNotesRequest": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "string"
          }
        }
      },
      "PatchLessonLinkRequest": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          }
        }
      },
      "PatchAttendanceStatusRequest": {
        "type": "object",
        "properties": {
          "attendanceStatus": {
            "type": "string",
            "enum": [
              "PRESENCE",
              "NOT_PRESENCE",
              "REASON"
            ]
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageDTOGetUserResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetAttendanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "student": {
            "$ref": "#/components/schemas/GetStudentResponse"
          },
          "attendanceStatus": {
            "type": "string",
            "enum": [
              "PRESENCE",
              "NOT_PRESENCE",
              "REASON"
            ]
          }
        }
      },
      "GetLessonResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "$ref": "#/components/schemas/GetSubjectResponse"
          },
          "program": {
            "$ref": "#/components/schemas/GetProgramResponse"
          },
          "tutor": {
            "$ref": "#/components/schemas/GetTutorSimpleResponse"
          },
          "attendances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAttendanceResponse"
            }
          },
          "notes": {
            "type": "string"
          },
          "lessonStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "HAPPENED",
              "CANCELLED",
              "RESCHEDULED"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "link": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "GetProgramResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "name": {
            "type": "string"
          },
          "lessonCount": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "programStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DISABLED"
            ]
          },
          "hex": {
            "type": "string"
          }
        }
      },
      "GetStudentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/GetUserResponse"
          },
          "hex": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "grade": {
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        }
      },
      "GetSubjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/GetOrganizationResponse"
          }
        }
      },
      "GetTutorSimpleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/GetUserResponse"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "GetUserScheduleResponse": {
        "type": "object",
        "properties": {
          "lessons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetLessonResponse"
            }
          }
        }
      },
      "GetTutorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/GetUserResponse"
          },
          "socials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "notes": {
            "type": "string"
          },
          "subjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubjectResponse"
            }
          },
          "grades": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PageDTOGetTutorResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTutorResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageDTOGetSubjectResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubjectResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageDTOGetStudentResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStudentResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetTutorScheduleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          }
        }
      },
      "PageDTOGetTutorScheduleResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTutorScheduleResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageDTOGetOrganizationResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrganizationResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "CRMEduScheme": {
        "type": "http",
        "name": "JWTAuth",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
